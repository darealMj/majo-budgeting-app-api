name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run pre-commit (includes all tools)
      run: |
        pre-commit run --all-files

    - name: Upload Bandit Security Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json

  tests:
    runs-on: ubuntu-latest
    name: Run Tests
    needs: code-quality

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements*.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Upload Coverage Reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Upload Coverage HTML Report
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.11'
      with:
        name: coverage-html-report
        path: htmlcov/

  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Security Scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Safety
      run: |
        python -m pip install --upgrade pip
        pip install safety

    - name: Run Safety Check (Dependency Vulnerabilities)
      run: |
        safety check --output json > safety-report.json
        safety check

    - name: Upload Safety Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: safety-dependency-report
        path: safety-report.json

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build Test
    needs: [code-quality]
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: budgeting-app:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Optional: Deploy to staging on main branch
  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    needs: [code-quality, docker-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Staging
      run: |
        echo "Would deploy to staging here"
        # Add your deployment commands here
